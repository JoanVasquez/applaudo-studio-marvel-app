{"version":3,"sources":["util/reducerCreator.js","store/actions/characters/characterActionType.js","util/LocalStorageUtil.js","constants/constants.js","store/reducers/characters/characterReducer.js","store/actions/comics/comicActionType.js","store/reducers/comics/comicReducer.js","store/actions/pagination/paginationActionType.js","store/reducers/pagination/paginationReducer.js","store/actions/stories/storyActionType.js","store/reducers/stories/storyReducer.js","store/reducers/allReducers.js","store/store.js","components/slider/Slider.js","components/character-card/CharacterCard.js","components/list-group/ListGroup.js","components/comic-card/ComicCard.js","components/loading/Loading.js","components/alert/Alert.js","config/MarvelApiConfig.js","util/actionCreator.js","store/actions/characters/characterAction.js","services/CharacterService.js","store/actions/comics/comicAction.js","services/ComicService.js","views/home/Home.js","store/actions/pagination/paginationAction.js","services/PaginationService.js","util/paginationUtil.js","components/paginator/Paginator.js","components/input-filter/InputFilter.js","util/filterUtil.js","views/characters/Character.js","views/characters/ComicsByCharacter.js","views/comics/Comics.js","store/actions/stories/storyAction.js","services/StoryService.js","components/story-card/StoryCard.js","views/stories/Stories.js","views/characters/StoryByCharacter.js","routes.js","components/header/Header.js","components/navbar/Navbar.js","components/footer/Footer.js","views/404/NoFound.js","App.js","index.js"],"names":["reducerCreator","initialState","reducers","state","action","hasOwnProperty","type","LOADING_CHARACTERS","GET_COMICS_BY_CHARACTER","GET_STORIES_BY_CHARACTER","GET_CHARACTERS","GET_ERRORS","setLocalStorageWithExpiry","key","value","ttl","item","expiry","Date","getTime","localStorage","setItem","JSON","stringify","getLocalStorageWithExpiry","itemStr","getItem","parse","removeItem","SIX_HOURS_TO_MILLI_SECONDS","CHARACTERS","COMICS","STORIES","isLoading","data","comicsByCharacter","storiesByCharacter","error","payload","console","log","LOADING_COMICS","GET_COMICS","GET_COMICS_ERRORS","SET_PAGINATION","RESET_PAGINATION","paginator","pages","paginatorData","paginatedData","totalData","LOADING_STORIES","GET_STORIES","combineReducers","characters","comics","stories","store","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","createStore","allReducers","applyMiddleware","thunk","classNames","require","Slider","sliderId","children","indicators","id","className","data-ride","map","indicator","index","data-target","data-slide-to","href","role","data-slide","aria-hidden","Content","title","message","image","active","src","alt","CharacterCard","characterId","description","ListGroup","ComicCard","style","maxWidth","length","character","name","story","Loading","React","memo","Alert","config","PUBLIC_KEY","HASH","actionCreator","argNames","values","forEach","arg","characterService","this","API_URL","process","url","marvelApiConfig","axios","get","results","getCharacters","charactersFromLocalStorage","dispatch","getAllCharacters","then","catch","ex","comicService","getComics","comicsFromLocalStorage","getAllComics","Home","useSelector","isLoadingCharacters","charactersError","comicsError","isLoadingComics","charactersWithDescription","filter","useDispatch","useEffect","slice","thumbnail","path","extension","comic","items","paginationService","currentPage","dataSet","paginate","pageSize","Paginator","build","Array","last_page","first_page","keys","first_result","last_result","pagination","setPagination","resetPagination","props","has_previous_page","onClick","event","preventDefault","onPaginate","page","has_next_page","current_page","next_page","InputFilter","onFilter","filterByOptions","useState","filterBy","setFilterBy","onSubmit","htmlFor","onChange","target","option","placeholder","aria-label","genericFilteredItem","text","filteredBy","filteredDataSet","Set","toLowerCase","includes","add","filteredData","from","Character","setCurrentPage","onPaginator","useCallback","filterText","dataToFilter","determine","genericFilterItemByObject","ComicsByCharacter","getComicsByCharacter","Comic","storyService","StoryCard","Stories","storiesFromeLocalStorage","getAllStories","getStories","StoryByCharacter","getStoriesByCharacter","router","navRoutes","Header","Navbar","zIndex","width","data-toggle","aria-controls","aria-expanded","route","Footer","NoFound","class","App","routeResult","useRoutes","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.0c4a63e7.chunk.js","sourcesContent":["const reducerCreator = (initialState, reducers) => {\n  return (state = initialState, action) => {\n    if (reducers.hasOwnProperty(action.type)) {\n      return reducers[action.type](state, action);\n    }\n    return state;\n  };\n};\n\nexport default reducerCreator;\n","export const LOADING_CHARACTERS = \"[CHARACTERS] LOADING CHARACTERS\";\nexport const GET_COMICS_BY_CHARACTER = \"[CHARACTERS] GET COMICS BY CHARACTER\";\nexport const GET_STORIES_BY_CHARACTER = \"[CHARACTERS] GET STORIES BY CHARACTER\";\nexport const GET_CHARACTERS = \"[CHARACTERS] GET CHARACTERS\";\nexport const GET_ERRORS = \"[CHARACTERS] GET ERRORS\";\n","export const setLocalStorageWithExpiry = (key, value, ttl) => {\n  const now = new Date();\n\n  // `item` is an object which contains the original value\n  // as well as the time when it's supposed to expire\n  const item = {\n    value: value,\n    expiry: now.getTime() + ttl,\n  };\n  localStorage.setItem(key, JSON.stringify(item));\n};\n\nexport const getLocalStorageWithExpiry = (key) => {\n  const itemStr = localStorage.getItem(key);\n\n  // if the item doesn't exist, return null\n  if (!itemStr) {\n    return null;\n  }\n\n  const item = JSON.parse(itemStr);\n  const now = new Date();\n\n  // compare the expiry time of the item with the current time\n  if (now.getTime() > item.expiry) {\n    // If the item is expired, delete the item from storage\n    // and return null\n    localStorage.removeItem(key);\n    return null;\n  }\n  return item.value;\n};\n","export const SIX_HOURS_TO_MILLI_SECONDS = 6 * 3600000;\nexport const CHARACTERS = \"characters\";\nexport const COMICS = \"comics\";\nexport const STORIES = \"stories\";\n","import reducerCreator from \"../../../util/reducerCreator\";\nimport {\n  GET_CHARACTERS,\n  GET_COMICS_BY_CHARACTER,\n  GET_ERRORS,\n  GET_STORIES_BY_CHARACTER,\n  LOADING_CHARACTERS,\n} from \"../../actions/characters/characterActionType\";\nimport {\n  getLocalStorageWithExpiry,\n  setLocalStorageWithExpiry,\n} from \"../../../util/LocalStorageUtil\";\nimport {\n  SIX_HOURS_TO_MILLI_SECONDS,\n  CHARACTERS,\n} from \"../../../constants/constants\";\n\nconst initialState = {\n  isLoading: false,\n  data: [],\n  comicsByCharacter: [],\n  storiesByCharacter: [],\n  error: \"\",\n};\n\nconst characterReducer = {\n  [GET_CHARACTERS]: (state, action) => {\n    const characters = getLocalStorageWithExpiry(CHARACTERS);\n    if (!characters) {\n      setLocalStorageWithExpiry(\n        CHARACTERS,\n        action.payload,\n        SIX_HOURS_TO_MILLI_SECONDS\n      );\n    }\n    return {\n      ...state,\n      data: action.payload,\n    };\n  },\n  [LOADING_CHARACTERS]: (state, action) => {\n    return {\n      ...state,\n      isLoading: action.payload,\n    };\n  },\n  [GET_ERRORS]: (state, action) => {\n    console.log(action.payload);\n    return {\n      ...state,\n      error: \"Something went wrong with the server!\",\n    };\n  },\n  [GET_COMICS_BY_CHARACTER]: (state, action) => {\n    return {\n      ...state,\n      comicsByCharacter: action.payload,\n    };\n  },\n  [GET_STORIES_BY_CHARACTER]: (state, action) => {\n    return {\n      ...state,\n      storiesByCharacter: action.payload,\n    };\n  },\n};\n\nexport default reducerCreator(initialState, characterReducer);\n","export const LOADING_COMICS = \"[COMICS] LOADING COMICS\";\nexport const GET_COMICS = \"[COMICS] GET COMICS\";\nexport const GET_COMICS_ERRORS = \"[COMICS] GET COMICS ERRORS\";\n","import reducerCreator from \"../../../util/reducerCreator\";\nimport {\n  GET_COMICS,\n  GET_COMICS_ERRORS,\n  LOADING_COMICS,\n} from \"../../actions/comics/comicActionType\";\nimport {\n  getLocalStorageWithExpiry,\n  setLocalStorageWithExpiry,\n} from \"../../../util/LocalStorageUtil\";\nimport {\n  SIX_HOURS_TO_MILLI_SECONDS,\n  COMICS,\n} from \"../../../constants/constants\";\n\nconst initialState = {\n  isLoading: false,\n  data: [],\n  error: \"\",\n};\n\nconst comicReducer = {\n  [GET_COMICS]: (state, action) => {\n    const comics = getLocalStorageWithExpiry(COMICS);\n    if (!comics) {\n      setLocalStorageWithExpiry(\n        COMICS,\n        action.payload,\n        SIX_HOURS_TO_MILLI_SECONDS\n      );\n    }\n    return {\n      ...state,\n      data: action.payload,\n    };\n  },\n  [LOADING_COMICS]: (state, action) => {\n    return {\n      ...state,\n      isLoading: action.payload,\n    };\n  },\n  [GET_COMICS_ERRORS]: (state, action) => {\n    console.log(action.payload);\n    return {\n      ...state,\n      error: \"Something went wrong with the server!\",\n    };\n  },\n};\n\nexport default reducerCreator(initialState, comicReducer);\n","export const SET_PAGINATION = \"[PAGINATION] SET PAGINATION\";\nexport const RESET_PAGINATION = \"[PAGINATION] RESET PAGINATION\";\n","import reducerCreator from \"../../../util/reducerCreator\";\nimport {\n  SET_PAGINATION,\n  RESET_PAGINATION,\n} from \"../../actions/pagination/paginationActionType\";\n\nconst initialState = {\n  paginator: {\n    pages: [],\n    paginatorData: {},\n    paginatedData: [],\n    totalData: [],\n  },\n};\n\nconst paginatorReducer = {\n  [SET_PAGINATION]: (state, action) => {\n    return {\n      ...state,\n      paginator: action.payload,\n    };\n  },\n  [RESET_PAGINATION]: (state, action) => {\n    return {\n      paginator: {\n        pages: [],\n        paginatorData: {},\n        paginatedData: [],\n        totalData: [],\n      },\n    };\n  },\n};\n\nexport default reducerCreator(initialState, paginatorReducer);\n","export const LOADING_STORIES = \"[STORIES] LOADING STORIES\";\nexport const GET_STORIES = \"[STORIES] GET STORIES\";\nexport const GET_ERRORS = \"[STORIES] GET ERRORS\";\n","import reducerCreator from \"../../../util/reducerCreator\";\nimport {\n  GET_STORIES,\n  GET_ERRORS,\n  LOADING_STORIES,\n} from \"../../actions/stories/storyActionType\";\nimport {\n  SIX_HOURS_TO_MILLI_SECONDS,\n  STORIES,\n} from \"../../../constants/constants\";\nimport {\n  getLocalStorageWithExpiry,\n  setLocalStorageWithExpiry,\n} from \"../../../util/LocalStorageUtil\";\n\nconst initialState = {\n  isLoading: false,\n  data: [],\n  error: \"\",\n};\n\nconst storyReducer = {\n  [GET_STORIES]: (state, action) => {\n    const stories = getLocalStorageWithExpiry(STORIES);\n    if (!stories) {\n      setLocalStorageWithExpiry(\n        STORIES,\n        action.payload,\n        SIX_HOURS_TO_MILLI_SECONDS\n      );\n    }\n    return {\n      ...state,\n      data: action.payload,\n    };\n  },\n  [LOADING_STORIES]: (state, action) => {\n    return {\n      ...state,\n      isLoading: action.payload,\n    };\n  },\n  [GET_ERRORS]: (state, action) => {\n    console.log(action.payload);\n    return {\n      ...state,\n      error: \"Something went wrong with the server!\",\n    };\n  },\n};\n\nexport default reducerCreator(initialState, storyReducer);\n","import { combineReducers } from \"redux\";\nimport characters from \"./characters/characterReducer\";\nimport comics from \"./comics/comicReducer\";\nimport paginator from \"./pagination/paginationReducer\";\nimport stories from \"./stories/storyReducer\";\n\nexport default combineReducers({\n  characters,\n  comics,\n  stories,\n  paginator,\n});\n","import { createStore, applyMiddleware, compose } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport allReducers from \"./reducers/allReducers\";\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst store = createStore(\n  allReducers,\n  process.env.NODE_ENV === \"production\"\n    ? applyMiddleware(thunk)\n    : composeEnhancers(applyMiddleware(thunk))\n);\n\nexport default store;\n","import React from \"react\";\nimport \"./slider.scss\";\n\nconst classNames = require(\"classnames\");\n\nexport const Slider = ({ sliderId, children, indicators }) => {\n  return (\n    <div\n      id={sliderId}\n      className=\"carousel slide d-none d-md-block d-lg-block d-xl-block d-lg-none\"\n      data-ride=\"carousel\"\n    >\n      <ol className=\"carousel-indicators\">\n        {indicators.map((indicator, index) => (\n          <li\n            key={index}\n            data-target={`#${sliderId}`}\n            data-slide-to={index}\n            className={classNames(index === 0 ? \"active\" : \"\")}\n          ></li>\n        ))}\n      </ol>\n      <div className=\"carousel-inner\">{children}</div>\n      <a\n        className=\"carousel-control-prev\"\n        href={`#${sliderId}`}\n        role=\"button\"\n        data-slide=\"prev\"\n      >\n        <span className=\"carousel-control-prev-icon\" aria-hidden=\"true\"></span>\n        <span className=\"sr-only\">Previous</span>\n      </a>\n      <a\n        className=\"carousel-control-next\"\n        href={`#${sliderId}`}\n        role=\"button\"\n        data-slide=\"next\"\n      >\n        <span className=\"carousel-control-next-icon\" aria-hidden=\"true\"></span>\n        <span className=\"sr-only\">Next</span>\n      </a>\n    </div>\n  );\n};\n\nSlider.Content = ({ title, message, image, active }) => {\n  return (\n    <div className={classNames(\"carousel-item\", { active: active })}>\n      <img src={image} className=\"w-100 img-fluid\" alt=\"Slides\" />\n      <div className=\"carousel-caption d-none d-md-block text-container\">\n        <h5 className=\"text-slider\">{title}</h5>\n        <p className=\"text-slider\">{message}</p>\n      </div>\n    </div>\n  );\n};\n\nexport default Slider;\n","import React from \"react\";\nimport { A } from \"hookrouter\";\nimport { comicsByCharacter, storiesByCharacter } from \"../../routes\";\n\nexport const CharacterCard = ({ characterId, title, description, image }) => {\n  return (\n    <div className=\"card\">\n      <img src={image} className=\"card-img-top\" alt=\"Characters\" />\n      <div className=\"card-body\">\n        <h2 className=\"card-title\">{title}</h2>\n        <p className=\"card-text\">{description || \"No description found!\"}</p>\n        <A\n          href={`${comicsByCharacter}/${characterId}`}\n          className=\"btn btn-outline-secondary text-dark mr-2\"\n        >\n          Comics\n        </A>\n        <A\n          href={`${storiesByCharacter}/${characterId}`}\n          className=\"btn btn-outline-secondary text-dark ml-2\"\n        >\n          Stories\n        </A>\n      </div>\n    </div>\n  );\n};\n","import React from \"react\";\n\nexport const ListGroup = ({ message }) => {\n  return <li className=\"list-group-item\">{message}</li>;\n};\n","import React from \"react\";\nimport { ListGroup } from \"../list-group/ListGroup\";\nexport const ComicCard = ({ title, image, characters, stories }) => {\n  return (\n    <div className=\"card mb-3\" style={{ maxWidth: \"540px\" }}>\n      <div className=\"row no-gutters\">\n        <div className=\"col-md-4\">\n          <img src={image} className=\"card-img\" alt=\"Comic\" />\n        </div>\n        <div className=\"col-md-8\">\n          <div className=\"card-body\">\n            <h2 className=\"card-title\">{title}</h2>\n            <span className=\"card-text\">\n              <hr />\n              {characters.length > 0 && <h3>CHARACTERS</h3>}\n              <ul className=\"list-group list-group-flush\">\n                {characters.map((character, index) => (\n                  <ListGroup key={index} message={character.name} />\n                ))}\n              </ul>\n              {stories.length > 0 && <h3>STORIES</h3>}\n              <ul className=\"list-group list-group-flush\">\n                {stories.map((story, index) => (\n                  <ListGroup key={index} message={story.name} />\n                ))}\n              </ul>\n            </span>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n","import React from \"react\";\n\nexport const Loading = React.memo(() => {\n  return (\n    <div className=\"row mt-5 text-center\">\n      <div className=\"col-12 d-block text-center\">\n        <img src=\"/assets/images/spinner.gif\" alt=\"Loading...\" />\n      </div>\n    </div>\n  );\n});\n","import React from \"react\";\n\nexport const Alert = React.memo(({ type, message }) => {\n  return (\n    <div className={`alert ${type}`} role=\"alert\">\n      {message}\n    </div>\n  );\n});\n","const config = {\n  PUBLIC_KEY: \"82abc950f84fd8eb66d63aa2dbc95c1a\",\n  HASH: \"5cde74a63e2c30ed592da370b067f4c4\",\n};\n\nexport default config;\n","const actionCreator = (type, ...argNames) => {\n  return (...values) => {\n    if (argNames.length === values.length) {\n      let action = { type };\n      if (argNames.length && values.length) {\n        argNames.forEach((arg, index) => {\n          action[argNames[index]] = values[index];\n        });\n      }\n      return action;\n    }\n  };\n};\n\nexport default actionCreator;\n","import {\n  GET_CHARACTERS,\n  GET_ERRORS,\n  GET_COMICS_BY_CHARACTER,\n  LOADING_CHARACTERS,\n  GET_STORIES_BY_CHARACTER,\n} from \"./characterActionType\";\nimport CharacterService from \"../../../services/CharacterService\";\nimport actionCreator from \"../../../util/actionCreator\";\nimport { getLocalStorageWithExpiry } from \"../../../util/LocalStorageUtil\";\nimport { CHARACTERS } from \"../../../constants/constants\";\n\nconst characterService = new CharacterService();\n\nexport const getCharacters = () => {\n  const charactersFromLocalStorage = getLocalStorageWithExpiry(CHARACTERS);\n  if (charactersFromLocalStorage) {\n    return actionCreator(GET_CHARACTERS, \"payload\")(charactersFromLocalStorage);\n  }\n  return (dispatch) => {\n    characterService\n      .getAllCharacters()\n      .then((data) => {\n        dispatch(actionCreator(LOADING_CHARACTERS, \"payload\")(true));\n        dispatch(actionCreator(GET_CHARACTERS, \"payload\")(data));\n        dispatch(actionCreator(LOADING_CHARACTERS, \"payload\")(false));\n      })\n      .catch((ex) => {\n        dispatch(actionCreator(GET_ERRORS, \"payload\")(ex));\n        dispatch(actionCreator(LOADING_CHARACTERS, \"payload\")(false));\n      });\n  };\n};\n\nexport const getComicsByCharacter = (characterId) => {\n  return (dispatch) => {\n    characterService\n      .getComicsByCharacter(characterId)\n      .then((data) => {\n        dispatch(actionCreator(LOADING_CHARACTERS, \"payload\")(true));\n        dispatch(actionCreator(GET_COMICS_BY_CHARACTER, \"payload\")(data));\n        dispatch(actionCreator(LOADING_CHARACTERS, \"payload\")(false));\n      })\n      .catch((ex) => {\n        dispatch(actionCreator(GET_ERRORS, \"payload\")(ex));\n        dispatch(actionCreator(LOADING_CHARACTERS, \"payload\")(false));\n      });\n  };\n};\n\nexport const getStoriesByCharacter = (characterId) => {\n  return (dispatch) => {\n    characterService\n      .getStoriesByCharacter(characterId)\n      .then((data) => {\n        dispatch(actionCreator(LOADING_CHARACTERS, \"payload\")(true));\n        dispatch(actionCreator(GET_STORIES_BY_CHARACTER, \"payload\")(data));\n        dispatch(actionCreator(LOADING_CHARACTERS, \"payload\")(false));\n      })\n      .catch((ex) => {\n        dispatch(actionCreator(GET_ERRORS, \"payload\")(ex));\n        dispatch(actionCreator(LOADING_CHARACTERS, \"payload\")(false));\n      });\n  };\n};\n","import axios from \"axios\";\n\nimport marvelApiConfig from \"../config/MarvelApiConfig\";\n\nexport default class CharacterService {\n  constructor() {\n    this.API_URL = process.env.REACT_APP_PROD_API_URL;\n  }\n\n  async getAllCharacters() {\n    try {\n      const url = `${this.API_URL}/v1/public/characters?orderBy=name&ts=1000&apikey=${marvelApiConfig.PUBLIC_KEY}&hash=${marvelApiConfig.HASH}`;\n      const characters = await axios.get(url);\n      return characters.data.data.results;\n    } catch (ex) {\n      throw ex;\n    }\n  }\n\n  async getComicsByCharacter(characterId) {\n    try {\n      const url = `${this.API_URL}/v1/public/characters/${characterId}/comics?orderBy=title&ts=1000&apikey=${marvelApiConfig.PUBLIC_KEY}&hash=${marvelApiConfig.HASH}`;\n      const comics = await axios.get(url);\n      return comics.data.data.results;\n    } catch (ex) {\n      throw ex;\n    }\n  }\n\n  async getStoriesByCharacter(characterId) {\n    try {\n      const url = `${this.API_URL}/v1/public/characters/${characterId}/stories?orderBy=id&ts=1000&apikey=${marvelApiConfig.PUBLIC_KEY}&hash=${marvelApiConfig.HASH}`;\n      const comics = await axios.get(url);\n      return comics.data.data.results;\n    } catch (ex) {\n      throw ex;\n    }\n  }\n}\n","import {\n  GET_COMICS,\n  GET_COMICS_ERRORS,\n  LOADING_COMICS,\n} from \"./comicActionType\";\nimport ComicService from \"../../../services/ComicService\";\nimport actionCreator from \"../../../util/actionCreator\";\nimport { getLocalStorageWithExpiry } from \"../../../util/LocalStorageUtil\";\nimport { COMICS } from \"../../../constants/constants\";\n\nconst comicService = new ComicService();\n\nexport const getComics = () => {\n  const comicsFromLocalStorage = getLocalStorageWithExpiry(COMICS);\n  if (comicsFromLocalStorage) {\n    return actionCreator(GET_COMICS, \"payload\")(comicsFromLocalStorage);\n  }\n  return (dispatch) => {\n    comicService\n      .getAllComics()\n      .then((data) => {\n        dispatch(actionCreator(LOADING_COMICS, \"payload\")(true));\n        dispatch(actionCreator(GET_COMICS, \"payload\")(data));\n        dispatch(actionCreator(LOADING_COMICS, \"payload\")(false));\n      })\n      .catch((ex) => {\n        dispatch(actionCreator(GET_COMICS_ERRORS, \"payload\")(ex));\n        dispatch(actionCreator(LOADING_COMICS, \"payload\")(false));\n      });\n  };\n};\n","import axios from \"axios\";\n\nimport marvelApiConfig from \"../config/MarvelApiConfig\";\n\nexport default class ComicService {\n  constructor() {\n    this.API_URL = process.env.REACT_APP_PROD_API_URL;\n  }\n\n  async getAllComics() {\n    try {\n      const url = `${this.API_URL}/v1/public/comics?orderBy=issueNumber&ts=1000&apikey=${marvelApiConfig.PUBLIC_KEY}&hash=${marvelApiConfig.HASH}`;\n      const comics = await axios.get(url);\n      return comics.data.data.results;\n    } catch (ex) {\n      throw ex;\n    }\n  }\n}\n","import React, { useEffect } from \"react\";\nimport { Slider } from \"./../../components/slider/Slider\";\nimport { CharacterCard } from \"../../components/character-card/CharacterCard\";\nimport { ComicCard } from \"../../components/comic-card/ComicCard\";\nimport { Loading } from \"../../components/loading/Loading\";\nimport { Alert } from \"../../components/alert/Alert\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getCharacters } from \"../../store/actions/characters/characterAction\";\nimport { getComics } from \"../../store/actions/comics/comicAction\";\n\nimport \"./home.scss\";\n\nexport const Home = () => {\n  const characters = useSelector((state) => state.characters.data);\n  const comics = useSelector((state) => state.comics.data);\n  const isLoadingCharacters = useSelector(\n    (state) => state.characters.isLoading\n  );\n  console.log(isLoadingCharacters);\n  const charactersError = useSelector((state) => state.characters.error);\n  const comicsError = useSelector((state) => state.comics.error);\n  const isLoadingComics = useSelector((state) => state.comics.isLoading);\n  const charactersWithDescription = characters.filter(\n    (character) => character.description !== \"\"\n  );\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(getCharacters());\n    dispatch(getComics());\n  }, [dispatch]);\n\n  return (\n    <article className=\"container mt-3 rounded\">\n      <section className=\"row text-center\">\n        <article className=\"col-12\">\n          <h2 className=\"text-center\">CHARACTERS</h2>\n        </article>\n        <article className=\"card-deck w-100\">\n          {isLoadingCharacters || characters.length === 0 ? (\n            <div className=\"col-12 text-center\">\n              <Loading />\n            </div>\n          ) : (\n            charactersWithDescription.slice(0, 4).map((character) => (\n              <div key={character.id} className=\"col-md-6 col-sm-12 mt-3\">\n                <CharacterCard\n                  characterId={character.id}\n                  title={character.name}\n                  description={character.description}\n                  image={`${character.thumbnail.path}.${character.thumbnail.extension}`}\n                />\n              </div>\n            ))\n          )}\n        </article>\n      </section>\n\n      <div className=\"slider-container mt-3\">\n        {isLoadingCharacters || characters.length === 0 ? (\n          <section className=\"mb-5 d-flex justify-content-center\">\n            <Loading />\n          </section>\n        ) : (\n          <Slider\n            sliderId=\"characterSlider\"\n            indicators={characters.slice(0, 5)}\n          >\n            {characters.slice(0, 5).map((character, index) => (\n              <Slider.Content\n                key={character.id}\n                title={character.name}\n                message=\"Marvel Characters\"\n                active={index === 0 ? true : false}\n                image={`/assets/images/${index + 1}.jpg`}\n              ></Slider.Content>\n            ))}\n          </Slider>\n        )}\n        {charactersError && (\n          <Alert type=\"alert-danger\" message={charactersError} />\n        )}\n      </div>\n\n      <section className=\"mt-5\">\n        <h2 className=\"text-center\">COMICS</h2>\n        <article className=\"row mt-4\">\n          {isLoadingComics || comics.length === 0 ? (\n            <section className=\"mb-5 d-flex text-center w-100 justify-content-center\">\n              <Loading />\n            </section>\n          ) : (\n            comics.slice(0, 5).map((comic) => (\n              <div key={comic.id} className=\"col-md-6 col-sm-12\">\n                <ComicCard\n                  title={comic.title}\n                  image={`${comic.thumbnail.path}.${comic.thumbnail.extension}`}\n                  characters={comic.characters.items}\n                  stories={comic.stories.items}\n                />\n              </div>\n            ))\n          )}\n        </article>\n        {comicsError && <Alert type=\"alert-danger\" message={comicsError} />}\n      </section>\n    </article>\n  );\n};\n","import { SET_PAGINATION, RESET_PAGINATION } from \"./paginationActionType\";\nimport actionCreator from \"../../../util/actionCreator\";\nimport { PaginationService } from \"../../../services/PaginationService\";\n\nconst paginationService = new PaginationService();\n\nexport const setPagination = (currentPage, dataSet) => {\n  const paginator = paginationService.setPagination(currentPage, dataSet);\n  return actionCreator(SET_PAGINATION, \"payload\")(paginator);\n};\n\nexport const resetPagination = () => {\n  return actionCreator(RESET_PAGINATION)();\n};\n","import { pagination } from \"../util/paginationUtil\";\n\nexport class PaginationService {\n  setPagination(currentPage, dataSet) {\n    const paginate = pagination(currentPage, 9, dataSet);\n    return {\n      pages: paginate.pages,\n      paginatedData: paginate.paginatedData,\n      paginatorData: paginate.paginatorData,\n      totalData: dataSet,\n    };\n  }\n}\n","import Paginator from \"paginator\";\n\nexport const pagination = (currentPage, pageSize, dataSet) => {\n  let paginator = new Paginator(pageSize, 5);\n  let paginatorData = paginator.build(dataSet.length, currentPage);\n  let pages = [\n    ...Array(paginatorData.last_page + 1 - paginatorData.first_page).keys(),\n  ].map((index) => paginatorData.first_page + index);\n  let paginatedData = dataSet.slice(\n    paginatorData.first_result,\n    paginatorData.last_result + 1\n  );\n  let data = {\n    paginatedData,\n    paginatorData,\n    pages,\n  };\n  return data;\n};\n","import React from \"react\";\nimport \"./paginator.scss\";\n\nexport const Paginator = React.memo((props) => {\n  return (\n    <div className=\"pagination mt-3\">\n      <a\n        href=\"/#\"\n        className={`${!props.paginatorData.has_previous_page ? \"disable\" : \"\"}`}\n        onClick={(event) => {\n          event.preventDefault();\n          props.onPaginate(props.paginatorData.first_page);\n        }}\n      >\n        First\n      </a>\n      <a\n        href=\"/#\"\n        className={`${!props.paginatorData.has_previous_page ? \"disable\" : \"\"}`}\n        onClick={(event) => {\n          event.preventDefault();\n          props.onPaginate(props.paginatorData.first_page);\n        }}\n      >\n        &laquo;\n      </a>\n      {props.pages.map((page, index) => (\n        <a\n          key={index}\n          href=\"/#\"\n          className={`${\n            !props.paginatorData.has_previous_page &&\n            !props.paginatorData.has_next_page\n              ? \"disable\"\n              : \"\"\n          } ${props.paginatorData.current_page === page ? \"active\" : \"\"}`}\n          onClick={(event) => {\n            event.preventDefault();\n            props.onPaginate(page);\n          }}\n        >\n          {page}\n        </a>\n      ))}\n      <a\n        href=\"/#\"\n        className={` ${!props.paginatorData.has_next_page ? \"disable\" : \"\"}`}\n        onClick={(event) => {\n          event.preventDefault();\n          props.onPaginate(props.paginatorData.next_page);\n        }}\n      >\n        &raquo;\n      </a>\n      <a\n        href=\"/#\"\n        className={`${!props.paginatorData.has_next_page ? \"disable\" : \"\"}`}\n        onClick={(event) => {\n          event.preventDefault();\n          props.onPaginate(props.paginatorData.last_page);\n        }}\n      >\n        Last\n      </a>\n    </div>\n  );\n});\n","import React, { useEffect, useState } from \"react\";\n\nexport const InputFilter = ({ onFilter, filterByOptions }) => {\n  const [filterBy, setFilterBy] = useState(\"\");\n\n  useEffect(() => setFilterBy(filterByOptions[0]), [\n    setFilterBy,\n    filterByOptions,\n  ]);\n\n  const handleFilter = (event) => {\n    onFilter(filterBy, event.target.value);\n  };\n\n  return (\n    <section className=\"row\">\n      <article className=\"col-12\">\n        <form\n          className=\"form-inline my-2 my-lg-0\"\n          onSubmit={(event) => event.preventDefault()}\n        >\n          <div className=\"form-group\">\n            <label htmlFor=\"filter-by\">Search By</label>\n            <select\n              onChange={(event) => setFilterBy(event.target.value)}\n              className=\"form-control ml-3\"\n              id=\"filter-by\"\n            >\n              {filterByOptions.map((option, index) => (\n                <option key={index} value={option}>\n                  {option}\n                </option>\n              ))}\n            </select>\n          </div>\n          <input\n            className=\"form-control ml-3 mr-sm-2\"\n            type=\"text\"\n            placeholder=\"Search\"\n            aria-label=\"Search\"\n            onChange={handleFilter}\n          />\n        </form>\n      </article>\n    </section>\n  );\n};\n","import Paginator from \"paginator\";\n\nexport const genericFilteredItem = (text, filteredBy, pageSize, dataSet) => {\n  const filteredDataSet = new Set();\n  dataSet.forEach((data) => {\n    if (data[filteredBy].toLowerCase().includes(text.toLowerCase())) {\n      filteredDataSet.add(data);\n    }\n  });\n\n  const filteredData = Array.from(filteredDataSet);\n  let paginator = new Paginator(pageSize, 7);\n  let paginatorData = paginator.build(filteredData.length, 1);\n  let pages = [\n    ...Array(paginatorData.last_page + 1 - paginatorData.first_page).keys(),\n  ].map((index) => paginatorData.first_page + index);\n  let paginatedData = filteredData.slice(\n    paginatorData.first_result,\n    paginatorData.last_result + 1\n  );\n  let data = {\n    paginatedData,\n    paginatorData,\n    pages,\n    filteredData,\n  };\n  return data;\n};\n\nexport const genericFilterItemByObject = (\n  text,\n  filteredBy,\n  pageSize,\n  dataSet\n) => {\n  const filteredDataSet = new Set();\n  dataSet.forEach((dataToFilter) => {\n    dataToFilter[filteredBy].items.forEach((determine) => {\n      if (determine.name.toLowerCase().includes(text.toLowerCase())) {\n        filteredDataSet.add(dataToFilter);\n      }\n    });\n  });\n\n  const filteredData = Array.from(filteredDataSet);\n  let paginator = new Paginator(pageSize, 7);\n  let paginatorData = paginator.build(filteredData.length, 1);\n  let pages = [\n    ...Array(paginatorData.last_page + 1 - paginatorData.first_page).keys(),\n  ].map((index) => paginatorData.first_page + index);\n  let paginatedData = filteredData.slice(\n    paginatorData.first_result,\n    paginatorData.last_result + 1\n  );\n\n  let data = {\n    paginatedData,\n    paginatorData,\n    pages,\n    filteredData,\n  };\n\n  return data;\n};\n","import React, { useCallback, useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  resetPagination,\n  setPagination,\n} from \"../../store/actions/pagination/paginationAction\";\nimport { getCharacters } from \"../../store/actions/characters/characterAction\";\nimport { CharacterCard } from \"../../components/character-card/CharacterCard\";\nimport { Paginator } from \"../../components/paginator/Paginator\";\nimport { InputFilter } from \"../../components/input-filter/InputFilter\";\nimport { Loading } from \"../../components/loading/Loading\";\nimport {\n  genericFilteredItem,\n  genericFilterItemByObject,\n} from \"../../util/filterUtil\";\n\nexport const Character = () => {\n  const characters = useSelector((state) => state.characters.data);\n  const isLoading = useSelector((state) => state.characters.isLoading);\n  const paginator = useSelector((state) => state.paginator.paginator);\n  const dispatch = useDispatch();\n  const [currentPage, setCurrentPage] = useState(1);\n\n  useEffect(() => {\n    dispatch(getCharacters());\n  }, [dispatch]);\n\n  useEffect(() => {\n    if (characters.length) {\n      dispatch(setPagination(1, characters));\n      return () => dispatch(resetPagination());\n    }\n  }, [characters, dispatch]);\n\n  const onPaginator = useCallback(\n    (currentPage) => {\n      dispatch(setPagination(currentPage, characters));\n      setCurrentPage(currentPage);\n    },\n    [characters, setCurrentPage, dispatch]\n  );\n\n  const onFilter = useCallback(\n    (filterBy, filterText) => {\n      if (filterText) {\n        if (filterBy === \"name\") {\n          const paginate = genericFilteredItem(\n            filterText,\n            filterBy,\n            9,\n            characters\n          );\n          dispatch(setPagination(1, paginate.filteredData));\n        } else if (filterBy === \"comics\" || filterBy === \"stories\") {\n          const paginate = genericFilterItemByObject(\n            filterText,\n            filterBy,\n            9,\n            characters\n          );\n\n          dispatch(setPagination(1, paginate.filteredData));\n        }\n      } else {\n        onPaginator(currentPage);\n      }\n    },\n    [characters, currentPage, dispatch, onPaginator]\n  );\n\n  return (\n    <article className=\"container\">\n      <h2 className=\"mt-3\">CHARACTERS</h2>\n      <InputFilter\n        onFilter={onFilter}\n        filterByOptions={[\"name\", \"comics\", \"stories\"]}\n      />\n      <section className=\"row\">\n        {isLoading || characters.length === 0 ? (\n          <div className=\"col-12 text-center\">\n            <Loading />\n          </div>\n        ) : (\n          paginator.paginatedData.map((character) => {\n            return (\n              <article key={character.id} className=\"col-md-4 col-sm-12 mt-3\">\n                <CharacterCard\n                  characterId={character.id}\n                  title={character.name}\n                  description={character.description}\n                  image={`${\n                    character.thumbnail ? character.thumbnail.path : []\n                  }.${\n                    character.thumbnail ? character.thumbnail.extension : []\n                  }`}\n                />\n              </article>\n            );\n          })\n        )}\n      </section>\n      <section className=\"row\">\n        <article className=\"col-12\">\n          <Paginator\n            onPaginate={onPaginator}\n            paginatorData={paginator.paginatorData}\n            pages={paginator.pages}\n          />\n        </article>\n      </section>\n    </article>\n  );\n};\n","import React, { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { ComicCard } from \"../../components/comic-card/ComicCard\";\nimport { getComicsByCharacter } from \"../../store/actions/characters//characterAction\";\nimport { Loading } from \"../../components/loading/Loading\";\n\nexport const ComicsByCharacter = ({ characterId }) => {\n  const comics = useSelector((state) => state.characters.comicsByCharacter);\n  const isLoading = useSelector((state) => state.characters.isLoading);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(getComicsByCharacter(characterId));\n  }, [characterId, dispatch]);\n\n  return (\n    <article className=\"container mt-3\">\n      <h2>COMICS BY CHARACTER</h2>\n      <section className=\"row mt-3\">\n        {isLoading || comics.length === 0 ? (\n          <div className=\"col-12 text-center\">\n            <Loading />\n          </div>\n        ) : (\n          comics.length > 0 &&\n          comics.map((comic) => (\n            <article key={comic.id} className=\"col-md-6 col-sm-12\">\n              <ComicCard\n                title={comic.title}\n                image={`${comic.thumbnail.path}.${comic.thumbnail.extension}`}\n                characters={comic.characters.items}\n                stories={comic.stories.items}\n              />\n            </article>\n          ))\n        )}\n      </section>\n    </article>\n  );\n};\n","import { Paginator } from \"../../components/paginator/Paginator\";\nimport React, { useCallback, useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { ComicCard } from \"../../components/comic-card/ComicCard\";\nimport { Loading } from \"../../components/loading/Loading\";\nimport { InputFilter } from \"../../components/input-filter/InputFilter\";\nimport { getComics } from \"../../store/actions/comics/comicAction\";\nimport {\n  resetPagination,\n  setPagination,\n} from \"../../store/actions/pagination/paginationAction\";\nimport { genericFilteredItem } from \"../../util/filterUtil\";\n\nexport const Comic = () => {\n  const comics = useSelector((state) => state.comics.data);\n  const isLoading = useSelector((state) => state.comics.isLoading);\n  const paginator = useSelector((state) => state.paginator.paginator);\n  const dispatch = useDispatch();\n  const [currentPage, setCurrentPage] = useState(1);\n\n  useEffect(() => {\n    dispatch(getComics());\n  }, [dispatch]);\n\n  useEffect(() => {\n    if (comics.length) {\n      dispatch(setPagination(1, comics));\n      return () => dispatch(resetPagination());\n    }\n  }, [comics, setCurrentPage, dispatch]);\n\n  const onPaginator = useCallback(\n    (currentPage) => {\n      dispatch(setPagination(currentPage, comics));\n      setCurrentPage(currentPage);\n    },\n    [comics, setCurrentPage, dispatch]\n  );\n\n  const onFilter = useCallback(\n    (filterBy, filterText) => {\n      if (filterText.length) {\n        const paginate = genericFilteredItem(filterText, filterBy, 9, comics);\n        dispatch(setPagination(1, paginate.filteredData));\n      } else {\n        onPaginator(currentPage);\n      }\n    },\n    [comics, currentPage, dispatch, onPaginator]\n  );\n\n  return (\n    <article className=\"container\">\n      <h2 className=\"mt-3\">COMICS</h2>\n      <InputFilter\n        onFilter={onFilter}\n        filterByOptions={[\"title\", \"format\", \"issueNumber\"]}\n      />\n      <section className=\"row\">\n        {isLoading || comics.length === 0 ? (\n          <Loading />\n        ) : (\n          paginator.paginatedData.map((comic, index) => {\n            return (\n              <article key={comic.id} className=\"col-md-6 col-sm-12 mt-3\">\n                <ComicCard\n                  title={comic.title}\n                  image={`${comic.thumbnail ? comic.thumbnail.path : \"\"}.${\n                    comic.thumbnail ? comic.thumbnail.extension : \"\"\n                  }`}\n                  characters={comic.characters ? comic.characters.items : []}\n                  stories={comic.stories ? comic.stories.items : []}\n                />\n              </article>\n            );\n          })\n        )}\n      </section>\n      <section className=\"row\">\n        <article className=\"col-12\">\n          <Paginator\n            onPaginate={onPaginator}\n            paginatorData={paginator.paginatorData}\n            pages={paginator.pages}\n          />\n        </article>\n      </section>\n    </article>\n  );\n};\n","import { GET_STORIES, GET_ERRORS, LOADING_STORIES } from \"./storyActionType\";\nimport StoryService from \"../../../services/StoryService\";\nimport actionCreator from \"../../../util/actionCreator\";\nimport { getLocalStorageWithExpiry } from \"../../../util/LocalStorageUtil\";\nimport { STORIES } from \"../../../constants/constants\";\n\nconst storyService = new StoryService();\n\nexport const getStories = () => {\n  const storiesFromeLocalStorage = getLocalStorageWithExpiry(STORIES);\n  if (storiesFromeLocalStorage) {\n    return actionCreator(GET_STORIES, \"payload\")(storiesFromeLocalStorage);\n  }\n  return (dispatch) => {\n    storyService\n      .getAllStories()\n      .then((data) => {\n        dispatch(actionCreator(LOADING_STORIES, \"payload\")(true));\n        dispatch(actionCreator(GET_STORIES, \"payload\")(data));\n        dispatch(actionCreator(LOADING_STORIES, \"payload\")(false));\n      })\n      .catch((ex) => {\n        dispatch(actionCreator(GET_ERRORS, \"payload\")(ex));\n        dispatch(actionCreator(LOADING_STORIES, \"payload\")(false));\n      });\n  };\n};\n","import axios from \"axios\";\n\nimport marvelApiConfig from \"../config/MarvelApiConfig\";\n\nexport default class StoryService {\n  constructor() {\n    this.API_URL = process.env.REACT_APP_PROD_API_URL;\n  }\n\n  async getAllStories() {\n    try {\n      const url = `${this.API_URL}/v1/public/stories?orderBy=id&ts=1000&apikey=${marvelApiConfig.PUBLIC_KEY}&hash=${marvelApiConfig.HASH}`;\n      const stories = await axios.get(url);\n      return stories.data.data.results;\n    } catch (ex) {\n      throw ex;\n    }\n  }\n}\n","import React from \"react\";\nimport { ListGroup } from \"../list-group/ListGroup\";\n\nexport const StoryCard = ({ title, description, characters, comics }) => {\n  return (\n    <div className=\"card\">\n      <div className=\"card-header\">Stories</div>\n      <div className=\"card-body\">\n        <h2 className=\"card-title\">{title}</h2>\n        <p className=\"card-text\">{description}</p>\n        <hr />\n        <div className=\"row\">\n          {characters.length > 0 && (\n            <div className=\"col-md-6 col-sm-12\">\n              <h3>Characters</h3>\n              <ul className=\"list-group\">\n                {characters.map((character, index) => (\n                  <ListGroup key={index} message={character.name} />\n                ))}\n              </ul>\n            </div>\n          )}\n          <div className=\"col-md-6 col-sm-12\">\n            <h3>Comics</h3>\n            <ul className=\"list-group\">\n              {comics.map((comic, index) => (\n                <ListGroup key={index} message={comic.name} />\n              ))}\n            </ul>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n","import React, { useCallback, useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getStories } from \"../../store/actions/stories/storyAction\";\nimport {\n  resetPagination,\n  setPagination,\n} from \"../../store/actions/pagination/paginationAction\";\nimport { StoryCard } from \"../../components/story-card/StoryCard\";\nimport { Paginator } from \"../../components/paginator/Paginator\";\nimport { Loading } from \"../../components/loading/Loading\";\n\nexport const Stories = () => {\n  const stories = useSelector((state) => state.stories.data);\n  const isLoading = useSelector((state) => state.stories.isLoading);\n  const paginator = useSelector((state) => state.paginator.paginator);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(getStories());\n  }, [dispatch]);\n\n  useEffect(() => {\n    if (stories.length) {\n      dispatch(setPagination(1, stories));\n      return () => dispatch(resetPagination());\n    }\n  }, [stories, dispatch]);\n\n  const onPaginator = useCallback(\n    (currentPage) => {\n      dispatch(setPagination(currentPage, stories));\n    },\n    [stories, dispatch]\n  );\n\n  return (\n    <article className=\"container\">\n      <h2 className=\"mt-5\">STORIES</h2>\n\n      {isLoading || stories.length === 0 ? (\n        <Loading />\n      ) : (\n        paginator.paginatedData.map((story) => {\n          return (\n            <section key={story.id} className=\"row mt-3\">\n              <div className=\"col-12\">\n                <StoryCard\n                  title={story.title}\n                  description={story.description || \"No description found\"}\n                  characters={story.characters ? story.characters.items : []}\n                  comics={story.comics ? story.characters.items : []}\n                />\n              </div>\n            </section>\n          );\n        })\n      )}\n      <section className=\"row\">\n        <article className=\"col-12\">\n          <Paginator\n            onPaginate={onPaginator}\n            paginatorData={paginator.paginatorData}\n            pages={paginator.pages}\n          />\n        </article>\n      </section>\n    </article>\n  );\n};\n","import React, { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getStoriesByCharacter } from \"../../store/actions/characters/characterAction\";\nimport { StoryCard } from \"../../components/story-card/StoryCard\";\nimport { Loading } from \"../../components/loading/Loading\";\n\nexport const StoryByCharacter = ({ characterId }) => {\n  const stories = useSelector((state) => state.characters.storiesByCharacter);\n  const isLoading = useSelector((state) => state.characters.isLoading);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(getStoriesByCharacter(characterId));\n  }, [characterId, dispatch]);\n\n  return (\n    <article className=\"container mt-3\">\n      <h2>STORIES BY CHARACTER</h2>\n\n      {isLoading || stories.length === 0 ? (\n        <div className=\"col-12 text-center\">\n          <Loading />\n        </div>\n      ) : (\n        stories.map((story) => (\n          <section key={story.id} className=\"row mt-3\">\n            <article className=\"col-12\">\n              <StoryCard\n                key={story.id}\n                title={story.title}\n                description={story.description}\n                characters={story.characters.items}\n                comics={story.comics.items}\n              />\n            </article>\n          </section>\n        ))\n      )}\n    </article>\n  );\n};\n","import React from \"react\";\nimport { Home } from \"./views/home/Home\";\nimport { Character } from \"./views/characters/Character\";\nimport { ComicsByCharacter } from \"./views/characters/ComicsByCharacter\";\nimport { Comic } from \"./views/comics/Comics\";\nimport { Stories } from \"./views/stories/Stories\";\nimport { StoryByCharacter } from \"./views/characters/StoryByCharacter\";\n\nexport const router = {\n  \"/\": () => <Home />,\n  \"/characters\": () => <Character />,\n  \"/comics/:characterId\": ({ characterId }) => (\n    <ComicsByCharacter characterId={characterId} />\n  ),\n  \"/comics\": () => <Comic />,\n  \"/stories\": () => <Stories />,\n  \"/stories/:characterId\": ({ characterId }) => (\n    <StoryByCharacter characterId={characterId} />\n  ),\n};\n\nexport const navRoutes = [\n  {\n    name: \"Home\",\n    path: \"/\",\n  },\n  {\n    name: \"Characters\",\n    path: \"/characters\",\n  },\n  {\n    name: \"Comics\",\n    path: \"/comics\",\n  },\n  {\n    name: \"Stories\",\n    path: \"/stories\",\n  },\n];\n\nexport const comicsByCharacter = \"/comics\";\nexport const storiesByCharacter = \"/stories\";\n","import React from \"react\";\nimport \"./header.scss\";\n\nexport const Header = React.memo(() => {\n  return <header className=\"main-header\"></header>;\n});\n","import React from \"react\";\nimport { A } from \"hookrouter\";\nimport { navRoutes } from \"../../routes\";\n\nexport const Navbar = React.memo(() => {\n  return (\n    <nav\n      style={{ zIndex: 1001 }}\n      className=\"navbar main-nav navbar-expand-lg navbar-dark bg-dark position-fixed w-100\"\n    >\n      <A className=\"navbar-brand\" href=\"/\" aria-label=\"logo\">\n        <img src=\"./assets/images/logo.png\" width=\"60\" alt=\"logo\" />\n      </A>\n      <button\n        className=\"navbar-toggler\"\n        type=\"button\"\n        data-toggle=\"collapse\"\n        data-target=\"#navbarSupportedContent\"\n        aria-controls=\"navbarSupportedContent\"\n        aria-expanded=\"false\"\n        aria-label=\"Toggle navigation\"\n      >\n        <span className=\"navbar-toggler-icon\"></span>\n      </button>\n\n      <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n        <ul className=\"navbar-nav mr-auto\">\n          {navRoutes.map((route, key) => {\n            return (\n              <li key={key} className=\"nav-item\">\n                <A className=\"nav-link\" key={key} href={route.path}>\n                  {route.name}\n                </A>\n              </li>\n            );\n          })}\n        </ul>\n      </div>\n    </nav>\n  );\n});\n","import React from \"react\";\nimport \"./footer.scss\";\n\nexport const Footer = React.memo(() => {\n  return (\n    <footer className=\"p-4 mt-5 main-footer\">\n      <div className=\"container p-4\">\n        <div className=\"row\">\n          <img\n            className=\"d-inline\"\n            src=\"/assets/images/logo.png\"\n            alt=\"logo\"\n            width=\"60\"\n          />\n          <ul className=\"nav justify-content-center mx-auto \">\n            <li className=\"nav-item ml-3 mr-3\">\n              <span className=\"nav-link text-white text-uppercase\">\n                PRIVACY OF POLITIC\n              </span>\n            </li>\n            <li className=\"nav-item ml-3 mr-3\">\n              <span className=\"nav-link text-white text-uppercase\">\n                TERMS AND CONDICTIONS\n              </span>\n            </li>\n          </ul>\n        </div>\n      </div>\n      <hr className=\"bg-white\" />\n      <p className=\"text-center text-white\">\n        © 2019 Powered by Joan Vasquez. All Rights Reserved.\n      </p>\n    </footer>\n  );\n});\n","import React from \"react\";\n\nexport const NoFound = () => {\n  return (\n    <article class=\"container mt-3 d-flex justify-content-center \">\n      <section class=\"row\">\n        <div class=\"col-12\">\n          <img\n            src=\"/assets/images/404.png\"\n            alt=\"No Found\"\n            className=\"rounded\"\n          />\n        </div>\n      </section>\n    </article>\n  );\n};\n","import React from \"react\";\nimport { useRoutes } from \"hookrouter\";\nimport { router } from \"./routes\";\nimport { Header } from \"./components/header/Header\";\nimport { Navbar } from \"./components/navbar/Navbar\";\nimport { Footer } from \"./components/footer/Footer\";\nimport { NoFound } from \"./views/404/NoFound\";\nimport \"./App.scss\";\n\nconst App = () => {\n  const routeResult = useRoutes(router);\n\n  return (\n    <main id=\"wrapper\">\n      <Navbar />\n      <Header />\n      <section>{routeResult || <NoFound />}</section>\n      <Footer />\n    </main>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport store from \"./store/store\";\nimport App from \"./App\";\nimport \"./index.scss\";\nimport \"bootstrap/dist/css/bootstrap.css\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}